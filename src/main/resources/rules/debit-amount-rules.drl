import com.wf.rules.domain.TransactionDetails;
global com.wf.rules.domain.TransactionStatus transactionStatus;

dialect "mvel"

rule "Dynamic Amount based rule"
	when
		c : TransactionDetails(debitAmt > dynamicAmount)
	then
		transactionStatus.addOnHoldReason("Debit Amount is greater than Threshold: $" + c.getDynamicAmount)
end
rule "Throttle Max Available based rule"
	when
		c : TransactionDetails(debitAmt > (cap*throttleMaxAvailable))
	then
		transactionStatus.addOnHoldReason("Debit Amount is greater than "+(c.getThrottleMaxAvailable*100)+"% of Cap")
end